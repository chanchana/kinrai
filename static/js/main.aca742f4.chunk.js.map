{"version":3,"sources":["environment.js","Register.js","Recommender.js","App.js","serviceWorker.js","index.js"],"names":["dotenv","config","appServerUrl","process","APP_SERVER_URL","Register","useState","isDone","setIsDone","isCheckingUsername","setIsCheckingUsername","usernameError","setUsernameError","username","setUsername","gender","setGender","birthDate","setBirthDate","preferPrice","setPreferPrice","preferNearby","setPreferNearby","categories","setCategories","categoriesList","setCategoriesList","categoriesListLength","setCategoriesListLength","commonListLength","setCommonListLength","isFullList","setIsFullList","useEffect","visibleCategories","axios","get","env","then","res","data","forEach","e","push","value","_id","label","name_en","resCommonListLength","length","catch","err","alert","response","handleShowFullCategories","inputIsFullList","allCategories","slice","map","FormControlLabel","control","Checkbox","checked","includes","onChange","checkedName","newNames","filter","name","console","log","handleCategories","key","FormControl","fullWidth","Box","display","alignItems","width","mr","TextField","error","helperText","event","newUsername","target","errorText","match","variant","minWidth","CircularProgress","color","InputLabel","Select","MenuItem","utils","DateFnsUtils","margin","inputVariant","id","format","date","KeyboardButtonProps","labelId","component","FormGroup","Button","onClick","startIcon","errors","join","newUser","profile","birthdate","preference","price_range","prefer_nearby","post","Cookies","set","window","location","reload","LinearProgress","ProgressWithLabel","props","Typography","Recommender","loadingText","setLoadingText","restaurants","setRestaurants","setLocation","token","setToken","interaction","setInteraction","currentRestaurant","setCurrentRestaurant","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","users","user","type","coordinates","recommendations","handleInteraction","restaurantId","isLove","newInteraction","restaurant","is_love","timestamp","Date","now","newCurrentRestaurant","histories","progressDone","Grid","container","direction","style","fontSize","recommender","Card","cover_url","CardMedia","image","title","height","CardContent","marginBottom","marginTop","address","Chip","marginRight","dist","calculated","toFixed","repeat","rating","likes","CardActions","item","xs","size","justify","remove","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","setUser","isRegister","setIsRegister","cookieUsername","login","inputUsername","status","loginForm","ThemeProvider","Container","maxWidth","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.aca742f4.chunk.js","sourcesContent":["import dotenv from 'dotenv'\n\ndotenv.config()\n\nexport default {\n    appServerUrl: process.env.APP_SERVER_URL ?? 'https://restaurant-recommender-system.et.r.appspot.com',\n}","import React, { useState, useEffect } from 'react';\nimport { Box, Button, TextField, FormControl, Select, MenuItem, InputLabel, FormControlLabel, FormGroup, Checkbox, LinearProgress, CircularProgress } from '@material-ui/core'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns';\nimport env from './environment'\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\n\nexport const Register = () => {\n\n  const [isDone, setIsDone] = useState(false)\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false)\n  const [usernameError, setUsernameError] = useState('')\n  const [username, setUsername] = useState('')\n  const [gender, setGender] = useState('')\n  const [birthDate, setBirthDate] = useState(null)\n  const [preferPrice, setPreferPrice] = useState('')\n  const [preferNearby, setPreferNearby] = useState(false)\n  const [categories, setCategories] = useState([])\n  const [categoriesList, setCategoriesList] = useState([])\n  const [categoriesListLength, setCategoriesListLength] = useState(0)\n  const [commonListLength, setCommonListLength] = useState(0)\n  const [isFullList, setIsFullList] = useState(false)\n\n  useEffect(() => {\n    const visibleCategories = []\n    axios.get(`${env.appServerUrl}/api/categories/search?is_visible=1&is_common=1`).then((res) => {\n      res.data.forEach((e) => {\n        visibleCategories.push({\n          value: e._id,\n          label: e.name_en,\n        })\n      })\n      const resCommonListLength = res.data.length\n      setCommonListLength(resCommonListLength)\n      axios.get(`${env.appServerUrl}/api/categories/search?is_visible=1&is_common=0`).then((res) => {\n        res.data.forEach((e) => {\n          visibleCategories.push({\n            value: e._id,\n            label: e.name_en,\n          })\n        })\n        setCategoriesListLength(resCommonListLength)\n        setCategoriesList(visibleCategories)\n        setIsDone(true)\n      })\n    }).catch((err) => {\n      alert(err.response)\n    })\n  }, [])\n\n  const handleShowFullCategories = (inputIsFullList) => {\n    setIsFullList(inputIsFullList)\n    if (inputIsFullList) {\n      setCategoriesListLength(categoriesList.length)\n    } else {\n      setCategoriesListLength(commonListLength)\n    }\n  }\n\n  const handleRegister = () => {\n    if (usernameError !== '') {\n      alert(usernameError)\n    } else {\n      const errors = []\n      if (username === '') {\n        errors.push('Username')\n      }\n      if (gender === '') {\n        errors.push('Gender')\n      }\n      if (!birthDate) {\n        errors.push('Birthdate')\n      }\n      if (preferPrice === '') {\n        errors.push('Prefer Price')\n      }\n      if (errors.length > 0) {\n        alert(`Please fill in theres fields: ${errors.join(', ')}`)\n      } else {\n        setIsDone(false)\n        const newUser = {\n          username: username,\n          profile: {\n            gender: gender,\n            birthdate: birthDate,\n            preference: {\n              categories: categories,\n              price_range: preferPrice,\n              prefer_nearby: preferNearby,\n            }\n          }\n        } \n        axios.post(`${env.appServerUrl}/api/users`, newUser).then((res) => {\n          if ('username' in res.data) {\n            Cookies.set('username', res.data.username)\n            window.location.reload()\n          } else {\n            alert('Error creating new user')\n            setIsDone(true)\n          }\n        }).catch((err) => {\n          alert(err.response)\n          setIsDone(true)\n        })\n      }\n    }\n  }\n\n  const handleUsername = (event) => {\n    const letterNumber = /^[0-9a-zA-Z]+$/\n    const newUsername = event.target.value\n    let errorText = ''\n    if (!newUsername.match(letterNumber)) {\n      errorText = 'Cannot contain special charecters.'\n    }\n    if (newUsername === '') {\n      errorText = 'Username cannot be blank.'\n    }\n    if (errorText === '') {\n      setIsCheckingUsername(true)\n      axios.get(`${env.appServerUrl}/api/users/has/${newUsername}`).then((res) => {\n        setIsCheckingUsername(false)\n        if (res.data) {\n          errorText = 'This name is already existed'\n        } else {\n          errorText = ''\n        }\n        setUsernameError(errorText)\n      })\n    }\n    setUsernameError(errorText)\n    setUsername(newUsername)\n  }\n\n  const handleGender = (event) => {\n    setGender(event.target.value);\n  }\n\n  const handlePreferPrice = (event) => {\n    setPreferPrice(event.target.value);\n  }\n\n  const handleBirthDate = (date) => {\n    setBirthDate(date);\n  }\n\n  const handlePreferNearby = (event) => {\n    setPreferNearby(event.target.checked)\n  }\n\n  function handleCategories(checkedName) {\n    const newNames = categories?.includes(checkedName)\n      ? categories?.filter(name => name !== checkedName)\n      : [...(categories ?? []), checkedName];\n    setCategories(newNames);\n    console.log(newNames)\n    return newNames;\n  }\n\n  const allCategories = (\n    categoriesList.slice(0, categoriesListLength).map(({ value, label }) => (\n      <FormControlLabel control={<Checkbox checked={categories.includes(value)} onChange={() => handleCategories(value)} name={value} />} key={value} label={label} />\n    ))\n  )\n\n  return (\n    <div>\n      <h3>Registration</h3>\n      { isDone ?\n        <div>\n          <FormControl fullWidth>\n            {/* Username */}\n            <Box display=\"flex\" alignItems=\"center\">\n              <Box width=\"100%\" mr={1}>\n              <TextField fullWidth error={usernameError !== ''} helperText={usernameError} value={username} onChange={handleUsername} variant=\"outlined\" label=\"Username\" />\n              </Box>\n              { isCheckingUsername && \n                <Box minWidth={35}>\n                  <CircularProgress color=\"secondary\" />\n                </Box>\n              }\n            </Box>\n            <p></p>\n            {/* Gender */}\n            <FormControl variant=\"outlined\">\n              <InputLabel>Gender</InputLabel>\n              <Select variant=\"outlined\" value={gender} onChange={handleGender} label=\"Gender\">\n                <MenuItem value=\"none\"><em>Select gender...</em></MenuItem>\n                <MenuItem value=\"male\">Male</MenuItem>\n                <MenuItem value=\"female\">Female</MenuItem>\n              </Select>\n            </FormControl>\n            {/* Birth Date */}\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker margin=\"normal\" inputVariant=\"outlined\" id=\"date-picker-dialog\" label=\"Birth Date\" format=\"dd/MM/yyyy\" value={birthDate} onChange={handleBirthDate} KeyboardButtonProps={{ 'aria-label': 'change date' }} />\n            </MuiPickersUtilsProvider>\n\n            <h4>Profile</h4>\n            {/* Prefer price */}\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"demo-simple-select-filled-label\">Price Preference</InputLabel>\n              <Select labelId=\"demo-simple-select-filled-label\" variant=\"outlined\" value={preferPrice} onChange={handlePreferPrice} label=\"Price Preference\">\n                <MenuItem value=\"none\"><em>Select prefer price...</em></MenuItem>\n                <MenuItem value={1}>฿</MenuItem>\n                <MenuItem value={2}>฿฿</MenuItem>\n                <MenuItem value={3}>฿฿฿</MenuItem>\n                <MenuItem value={4}>฿฿฿฿</MenuItem>\n                <MenuItem value={-1}>No Preference</MenuItem>\n              </Select>\n            </FormControl>\n            <p></p>\n            {/* Prefer nearby */}\n            <FormControlLabel control={<Checkbox checked={preferNearby} onChange={handlePreferNearby} />} label=\"Prefer nearby\"/>\n\n            <p></p>\n            <h4>Favorite Categories</h4>\n            <FormControl component=\"fieldset\">\n              <FormGroup>\n                {allCategories}\n              </FormGroup>\n              { !isFullList && <Button onClick={() => handleShowFullCategories(true)} startIcon={<KeyboardArrowDownIcon />}>Show more</Button> }\n              { isFullList && <Button onClick={() => handleShowFullCategories(false)} startIcon={<KeyboardArrowUpIcon />}>Show less</Button> }\n            </FormControl>\n          </FormControl>\n          <p></p>\n          <Button onClick={handleRegister} variant=\"contained\" color=\"primary\">Register</Button>\n          <p>&nbsp;</p>\n        </div> :\n        <LinearProgress  />\n      }\n    </div>\n  )\n}\n\nexport default Register","import React, { useState, useEffect } from 'react'\nimport { LinearProgress, Box, Typography, Card, CardContent, CardActions, Button, CardMedia, Grid, Chip } from '@material-ui/core'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport CloseIcon from '@material-ui/icons/Close'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport StarIcon from '@material-ui/icons/Star'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport Cookies from 'js-cookie'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport LocationOffIcon from '@material-ui/icons/LocationOff'\nimport axios from 'axios'\nimport env from './environment'\n\nconst ProgressWithLabel = (props) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <Box width=\"100%\" mr={1}>\n      <LinearProgress variant=\"determinate\" {...props} />\n    </Box>\n    <Box minWidth={35}>\n      <Typography variant=\"body2\" color=\"textSecondary\">{props.label}</Typography>\n    </Box>\n  </Box>\n)\n\nconst Recommender = (props) => {\n\n  const [loadingText, setLoadingText] = useState('Getting start.')\n  const [restaurants, setRestaurants] = useState(null)\n  const [location, setLocation] = useState(null)\n  const [token, setToken] = useState(null)\n  const [interaction, setInteraction] = useState([])\n  const [currentRestaurant, setCurrentRestaurant] = useState(0)\n\n  useEffect(() => {\n    setLoadingText('Getting current location')\n    if (!(\"geolocation\" in navigator)) {\n      alert('Geolocation is disabled')\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLocation([position.coords.longitude, position.coords.latitude])\n        console.log(position.coords)\n        setLoadingText('Getting recommendations')\n        axios.post(`${env.appServerUrl}/api/recommendations`, {\n          users: [props.user._id],\n          location: {\n            type: 'Point',\n            coordinates: [position.coords.longitude, position.coords.latitude],\n            // coordinates: [100.496216, 13.649434], // TEST KMUTT\n          }\n        }).then((res) => {\n          console.log(res.data)\n          setRestaurants(res.data.recommendations)\n          setToken(res.data.token)\n          setLoadingText('')\n        })\n      })\n    }\n  }, [props.user._id])\n\n  const finishRecommendation = () => {\n    console.log('finish!')\n    console.log(interaction)\n    // histories\n    axios.post(`${env.appServerUrl}/api/recommendations`, {\n      token: token,\n      histories: interaction,\n    }).then((res) => {\n      setRestaurants(res.data.recommendations)\n    })\n  }\n\n  const handleInteraction = (restaurantId, isLove) => {\n    const newInteraction = {\n      restaurant: restaurantId,\n      is_love: isLove,\n      timestamp: Date.now(),\n    }\n    interaction.push(newInteraction)\n    setInteraction(interaction)\n    const newCurrentRestaurant = currentRestaurant + 1\n    setCurrentRestaurant(newCurrentRestaurant)\n    if (newCurrentRestaurant >= restaurants.length) {\n      finishRecommendation()\n    }\n  }\n\n  const handleMore = () => {\n    setCurrentRestaurant(0)\n  }\n\n  const handleLogout = () => {\n    Cookies.remove('username')\n    window.location.reload()\n  }\n\n  const progressDone = (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <CheckCircleIcon style={{ fontSize: 100 }} color=\"secondary\" />\n      <h3>Thank you.</h3>\n      <Button onClick={handleMore} variant=\"contained\" color=\"primary\">More</Button>\n    </Grid>\n  )\n\n  const recommender = (\n    <div>\n      { restaurants && currentRestaurant < restaurants.length && (\n          <div>\n            <ProgressWithLabel variant=\"determinate\" value={((currentRestaurant + 1)/restaurants.length) * 100} label={`${currentRestaurant + 1}/${restaurants.length}`} />\n            <p></p>\n            <Card>\n              { restaurants[currentRestaurant].cover_url && <CardMedia component=\"img\" image={restaurants[currentRestaurant].cover_url} title=\"Contemplative Reptile\" height=\"160\" /> }\n              <CardContent>\n                <h2 style={{marginBottom: '0px', marginTop: '5px'}}>{restaurants[currentRestaurant].name ?? ''}</h2>\n                <p style={{fontSize: '10px', color: 'gray', marginBottom: '30px'}}>{restaurants[currentRestaurant].address}</p>\n                <div>\n                  {restaurants[currentRestaurant].profile.categories.map(({ _id, name_en }) => <Chip key={_id} style={{marginBottom: '5px', marginRight: '10px'}} label={name_en} />)}\n                </div>\n                <div>\n                  <p>\n                    <strong>\n                      {`${(restaurants[currentRestaurant].dist.calculated/1000).toFixed(2)} km` ?? ''}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    </strong>\n                    { restaurants[currentRestaurant].profile.price_range !== -1 && (\n                      <span>\n                        {'฿'.repeat(restaurants[currentRestaurant].profile.price_range)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      </span>\n                    )}\n                    { restaurants[currentRestaurant].profile.rating && (\n                      <span>\n                        <StarIcon style={{fontSize: 14}}/> {restaurants[currentRestaurant].profile.rating}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      </span>\n                    )}\n                    { restaurants[currentRestaurant].profile.likes && (\n                      <span>\n                        <ThumbUpAltIcon style={{fontSize: 14}} /> {restaurants[currentRestaurant].profile.likes}\n                      </span>\n                    )}\n                  </p>\n                </div>\n              </CardContent>\n              <CardActions>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Button fullWidth onClick={() => handleInteraction(restaurants[currentRestaurant]._id, false)} size=\"large\" color=\"secondary\" startIcon={<CloseIcon/>}><strong>Nah</strong></Button>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Button fullWidth onClick={() => handleInteraction(restaurants[currentRestaurant]._id, true)} size=\"large\" color=\"primary\" startIcon={<FavoriteIcon/>}><strong>Love</strong></Button>\n                  </Grid>\n                </Grid>\n              </CardActions>\n            </Card>\n          </div>\n        )\n      }\n      { restaurants && currentRestaurant >= restaurants.length &&\n        <div>\n          { progressDone }\n        </div>\n      }\n    </div>\n  )\n\n  return (\n    <div>\n      {/* {restaurants} */}\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <h3>Hi, {props.user.username ?? ''}</h3>\n        <Button onClick={handleLogout} size=\"small\" color=\"secondary\">Logout</Button>\n      </Grid>\n      { location ?\n        <div style={{color: 'gray'}}>\n          <LocationOnIcon style={{fontSize: '14px'}}/> {location[1].toFixed(6)}, {location[0].toFixed(6)}\n        </div> :\n        <LocationOffIcon style={{fontSize: '14px'}}/>\n      }\n\n      <p></p>\n      { loadingText ?\n        <div>\n          <p>{loadingText}</p>\n          <LinearProgress />\n        </div> :\n        <div>\n          { recommender }\n        </div>\n      }\n      <p></p>\n    </div>\n  )\n}\n\nexport default Recommender","import React, { useState, useEffect } from 'react';\nimport { Container, Button, TextField, FormControl, LinearProgress } from '@material-ui/core'\nimport Register from './Register'\nimport Recommender from './Recommender'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Cookies from 'js-cookie'\nimport axios from 'axios'\nimport env from './environment'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ffa040',\n      main: '#ff6f00',\n      dark: '#c43e00',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#63a4ff',\n      main: '#1976d2',\n      dark: '#004ba0',\n      contrastText: '#fff',\n    },\n  },\n})\n\nexport const App = () => {\n\n  const [isDone, setIsDone] = useState(false)\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [isRegister, setIsRegister] = useState(false)\n\n  useEffect(() => {\n    const cookieUsername = Cookies.get('username')\n    if (cookieUsername) {\n      login(cookieUsername)\n    } else {\n      setIsDone(true)\n    }\n  }, [])\n\n  const login = (inputUsername) => {\n    axios.post(`${env.appServerUrl}/api/auth`, {\n      username: inputUsername\n    }).then(res => {\n      const data = res.data\n      if (!data.status) {\n        alert(data.error)\n        setIsDone(true)\n      } else {\n        Cookies.set('username', data.data.username)\n        setUser(data.data)\n        setIsDone(true)\n      }\n    }).catch((err) => {\n      alert(err)\n    })\n  }\n\n  const handleLogin = () => {\n    setIsDone(false)\n    console.log(env)\n    login(username)\n  }\n\n  const handleUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const loginForm = (\n    <div>\n      <h3>Please login</h3>\n      <FormControl fullWidth>\n        <TextField onChange={handleUsername} variant=\"outlined\" label=\"Username\" />\n      </FormControl>\n      <Button onClick={handleLogin} style={{marginTop: '10px'}} variant=\"contained\" color=\"primary\">Login</Button>\n\n      <h4>or</h4>\n      <Button onClick={() => setIsRegister(true)} variant=\"contained\" color=\"primary\">Register</Button>\n    </div>\n  )\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <h1>Resteraunt Recommender</h1>\n          { isDone ?\n            <div>\n              { (!isRegister && !user) && loginForm }\n              { isRegister && (\n                <div>\n                  <Button onClick={() => setIsRegister(false)} color=\"primary\">Login</Button>\n                  <Register />\n                </div>\n              )}\n              { user && <Recommender user={user} name={user.username} /> }\n            </div> :\n            <LinearProgress  />\n          }\n        </Container>\n      </ThemeProvider>\n    </div>\n  )\n}\n//npx browserslist --update-db\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
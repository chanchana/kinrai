{"version":3,"sources":["environment.js","Register.js","util.js","Recommender.js","App.js","serviceWorker.js","index.js"],"names":["dotenv","config","appServerUrl","process","APP_SERVER_URL","fixedCategories","category","label","value","original_value","Register","useState","isDone","setIsDone","usernameError","setUsernameError","username","setUsername","gender","setGender","birthDate","setBirthDate","preferPrice","setPreferPrice","preferNearby","setPreferNearby","categories","setCategories","useEffect","sliderMarks","allFixedCategories","map","index","Box","key","marginBottom","style","Slider","min","max","defaultValue","aria-labelledby","step","valueLabelDisplay","onChange","event","handleCategorySlider","marks","FormControl","fullWidth","TextField","error","helperText","newUsername","target","errorText","match","axios","get","env","then","res","data","variant","InputLabel","Select","MenuItem","utils","DateFnsUtils","margin","inputVariant","id","format","date","KeyboardButtonProps","labelId","FormControlLabel","control","Checkbox","checked","padding","Button","onClick","alert","errors","push","length","join","newUser","profile","birthdate","preference","price_range","prefer_nearby","post","Cookies","set","window","location","reload","catch","err","console","log","response","color","LinearProgress","toRad","Math","PI","Transition","React","forwardRef","props","ref","Slide","direction","StyledRating","withStyles","iconFilled","iconHover","Rating","defaultCategories","ProgressWithLabel","display","alignItems","width","mr","minWidth","Typography","Recommender","loadingText","setLoadingText","restaurants","setRestaurants","setLocation","token","setToken","interaction","setInteraction","currentRestaurant","setCurrentRestaurant","ratingValue","setRatingValue","cardOpen","setCardOpen","profileOpen","setProfileOpen","isFinished","setIsFinished","price","setPrice","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","users","user","_id","type","coordinates","histories","recommendations","restaurant","finishRecommendation","showNextRestaurant","newCurrentRestaurant","setTimeout","progressDone","Grid","container","fontSize","openProfileDialog","handleCloseProfileDialog","profileDialog","Dialog","open","DialogContent","name","includes","checkedName","newNames","filter","handleCategories","DialogActions","updateData","has_profile","put","result","recommender","TransitionComponent","keepMounted","Card","cover_url","CardMedia","component","image","title","height","CardContent","marginTop","address","startIcon","url","openGoogleMap","name_en","Chip","marginRight","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","distance","toFixed","repeat","rating","likes","CardActions","paddingTop","textAlign","borderColor","justifyContent","newInteraction","is_love","timestamp","Date","now","getLabelText","precision","icon","justify","remove","size","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","App","setUser","isRegister","setIsRegister","cookieUsername","login","inputUsername","status","loginForm","ThemeProvider","Container","maxWidth","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4bf36a12.chunk.js","sourcesContent":["import dotenv from 'dotenv'\n\ndotenv.config()\n\nexport default {\n    appServerUrl: process.env.APP_SERVER_URL ?? 'https://neutron-dot-restaurant-recommender-system.et.r.appspot.com',\n}","import React, { useState, useEffect } from 'react';\nimport { Box, Button, TextField, FormControl, Select, MenuItem, InputLabel, FormControlLabel, Checkbox, LinearProgress, Slider } from '@material-ui/core'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers'\nimport 'date-fns'\nimport DateFnsUtils from '@date-io/date-fns';\nimport env from './environment'\nimport axios from 'axios'\nimport Cookies from 'js-cookie'\n\n\nconst fixedCategories = [\n  { category: '5f9ab47d7fc4aaabd3eb50ba', label: 'Thai', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50f0', label: 'Fast Food' , value: 50, original_value: 50 },\n  { category: '5f9ab4807fc4aaabd3eb512c', label: 'Buffet', value: 50, original_value: 50 },\n  { category: '5f9ab47d7fc4aaabd3eb50c9', label: 'Japanese', value: 50, original_value: 50 },\n  { category: '5f9ab4817fc4aaabd3eb5137', label: 'Chinese', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50e5', label: 'Seafood', value: 50, original_value: 50 },\n  { category: '5f9ab4807fc4aaabd3eb5117', label: 'Noodle', value: 50, original_value: 50 },\n  { category: '5f9ab4827fc4aaabd3eb5153', label: 'Steakhouse', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50ea', label: 'Korean', value: 50, original_value: 50 },\n  { category: '5f9ab47d7fc4aaabd3eb50bb', label: 'Italian', value: 50, original_value: 50 },\n  { category: '5f9ab4837fc4aaabd3eb5187', label: 'Shabu Shabu', value: 50, original_value: 50 },\n]\n\nexport const Register = () => {\n\n  const [isDone, setIsDone] = useState(false)\n  const [usernameError, setUsernameError] = useState('')\n  const [username, setUsername] = useState('')\n  const [gender, setGender] = useState('')\n  const [birthDate, setBirthDate] = useState(null)\n  const [preferPrice, setPreferPrice] = useState('')\n  const [preferNearby, setPreferNearby] = useState(false)\n  const [categories, setCategories] = useState(fixedCategories)\n  // const [categories, setCategories] = useState([])\n  // const [categoriesList, setCategoriesList] = useState([])\n  // const [categoriesListLength, setCategoriesListLength] = useState(0)\n  // const [commonListLength, setCommonListLength] = useState(0)\n  // const [isFullList, setIsFullList] = useState(false)\n\n  useEffect(() => {\n    // const visibleCategories = []\n    // axios.get(`${env.appServerUrl}/api/categories/search?is_visible=1&is_common=1`).then((res) => {\n    //   res.data.forEach((e) => {\n    //     visibleCategories.push({\n    //       value: e._id,\n    //       label: e.name_en,\n    //     })\n    //   })\n    //   const resCommonListLength = res.data.length\n    //   setCommonListLength(resCommonListLength)\n    //   axios.get(`${env.appServerUrl}/api/categories/search?is_visible=1&is_common=0`).then((res) => {\n    //     res.data.forEach((e) => {\n    //       visibleCategories.push({\n    //         value: e._id,\n    //         label: e.name_en,\n    //       })\n    //     })\n    //     setCategoriesListLength(resCommonListLength)\n    //     setCategoriesList(visibleCategories)\n    //     setIsDone(true)\n    //   })\n    // }).catch((err) => {\n    //   alert(err.response)\n    // })\n    setIsDone(true)\n  }, [])\n\n  // const handleShowFullCategories = (inputIsFullList) => {\n  //   setIsFullList(inputIsFullList)\n  //   if (inputIsFullList) {\n  //     setCategoriesListLength(categoriesList.length)\n  //   } else {\n  //     setCategoriesListLength(commonListLength)\n  //   }\n  // }\n\n  const handleRegister = () => {\n    if (usernameError !== '') {\n      alert(usernameError)\n    } else {\n      const errors = []\n      if (username === '') {\n        errors.push('Username')\n      }\n      if (gender === '') {\n        errors.push('Gender')\n      }\n      if (!birthDate) {\n        errors.push('Birthdate')\n      }\n      if (preferPrice === '') {\n        errors.push('Prefer Price')\n      }\n      if (errors.length > 0) {\n        alert(`Please fill in theres fields: ${errors.join(', ')}`)\n      } else {\n        setIsDone(false)\n        const newUser = {\n          username: username,\n          profile: {\n            gender: gender,\n            birthdate: birthDate,\n            preference: {\n              categories: categories,\n              price_range: preferPrice,\n              prefer_nearby: preferNearby,\n            }\n          }\n        }\n        axios.post(`${env.appServerUrl}/api/users`, newUser).then((res) => {\n          if ('username' in res.data) {\n            Cookies.set('username', res.data.username)\n            window.location.reload()\n          } else {\n            alert('Error creating new user')\n            setIsDone(true)\n          }\n        }).catch((err) => {\n          console.log(err)\n          alert(err.response)\n          setIsDone(true)\n        })\n      }\n    }\n  }\n\n  const handleUsername = (event) => {\n    const letterNumber = /^[0-9a-zA-Z]+$/\n    const newUsername = event.target.value\n    let errorText = ''\n    if (!newUsername.match(letterNumber)) {\n      errorText = 'Cannot contain special charecters.'\n    }\n    if (newUsername === '') {\n      errorText = 'Username cannot be blank.'\n    }\n    if (errorText === '') {\n      axios.get(`${env.appServerUrl}/api/users/has/${newUsername}`).then((res) => {\n        if (res.data) {\n          errorText = 'This name is already existed'\n        } else {\n          errorText = ''\n        }\n        setUsernameError(errorText)\n      })\n    }\n    setUsernameError(errorText)\n    setUsername(newUsername)\n  }\n\n  const handleGender = (event) => {\n    setGender(event.target.value);\n  }\n\n  const handlePreferPrice = (event) => {\n    setPreferPrice(event.target.value);\n  }\n\n  const handleBirthDate = (date) => {\n    setBirthDate(date);\n  }\n\n  const handlePreferNearby = (event) => {\n    setPreferNearby(event.target.checked)\n  }\n\n  const handleCategorySlider = (event, index, value) => {\n    categories[index].value = value * 10\n    categories[index].original_value = value * 10\n    setCategories(categories)\n  }\n\n  // function handleCategories(checkedName) {\n  //   const newNames = categories?.includes(checkedName)\n  //     ? categories?.filter(name => name !== checkedName)\n  //     : [...(categories ?? []), checkedName];\n  //   setCategories(newNames);\n  //   console.log(newNames)\n  //   return newNames;\n  // }\n\n\n\n  const sliderMarks = [\n    { value: 0, label: 'Hate' },\n    { value: 5, label: 'Okay' },\n    { value: 10, label: 'Love' },\n  ]\n\n  // const allCategories = (\n  //   categoriesList.slice(0, categoriesListLength).map(({ value, label }) => (\n  //     <FormControlLabel control={<Checkbox checked={categories.includes(value)} onChange={() => handleCategories(value)} name={value} />} key={value} label={label} />\n  //   ))\n  // )\n\n  const allFixedCategories = (\n    fixedCategories.map(({ category, label, value }, index) => \n      <Box key={category} marginBottom=\"50px\">\n        <p style={{marginBottom: \"0px\"}}><strong>{label}</strong></p>\n        <Slider index={category} min={0} max={10} defaultValue={5} aria-labelledby=\"discrete-slider-custom\" step={1} valueLabelDisplay=\"auto\" onChange={(event, value) => { handleCategorySlider(event, index, value) }} marks={sliderMarks} />\n      </Box>\n    )\n  )\n\n  return (\n    <div>\n      <h3>Registration</h3>\n      { isDone ?\n        <div>\n          <FormControl fullWidth>\n            {/* Username */}\n            <TextField fullWidth error={usernameError !== ''} helperText={usernameError} value={username} onChange={handleUsername} variant=\"outlined\" label=\"Username\" />\n            <p></p>\n            {/* Gender */}\n            <FormControl variant=\"outlined\">\n              <InputLabel>Gender</InputLabel>\n              <Select variant=\"outlined\" value={gender} onChange={handleGender} label=\"Gender\">\n                <MenuItem value=\"none\"><em>Select gender...</em></MenuItem>\n                <MenuItem value=\"male\">Male</MenuItem>\n                <MenuItem value=\"female\">Female</MenuItem>\n              </Select>\n            </FormControl>\n            {/* Birth Date */}\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker margin=\"normal\" inputVariant=\"outlined\" id=\"date-picker-dialog\" label=\"Birth Date\" format=\"dd/MM/yyyy\" value={birthDate} onChange={handleBirthDate} KeyboardButtonProps={{ 'aria-label': 'change date' }} />\n            </MuiPickersUtilsProvider>\n\n            <h4>Profile</h4>\n            {/* Prefer price */}\n            <FormControl variant=\"outlined\">\n              <InputLabel id=\"demo-simple-select-filled-label\">Price Preference</InputLabel>\n              <Select labelId=\"demo-simple-select-filled-label\" variant=\"outlined\" value={preferPrice} onChange={handlePreferPrice} label=\"Price Preference\">\n                <MenuItem value=\"none\"><em>Select prefer price...</em></MenuItem>\n                <MenuItem value={1}>฿</MenuItem>\n                <MenuItem value={2}>฿฿</MenuItem>\n                <MenuItem value={3}>฿฿฿</MenuItem>\n                <MenuItem value={4}>฿฿฿฿</MenuItem>\n                <MenuItem value={-1}>No Preference</MenuItem>\n              </Select>\n            </FormControl>\n            <p></p>\n            {/* Prefer nearby */}\n            <FormControlLabel control={<Checkbox checked={preferNearby} onChange={handlePreferNearby} />} label=\"Prefer nearby\"/>\n\n            <p></p>\n            <h4>Favorite Categories</h4>\n            {/* <FormControl component=\"fieldset\">\n              <FormGroup>\n                {allCategories}\n              </FormGroup>\n              { !isFullList && <Button onClick={() => handleShowFullCategories(true)} startIcon={<KeyboardArrowDownIcon />}>Show more</Button> }\n              { isFullList && <Button onClick={() => handleShowFullCategories(false)} startIcon={<KeyboardArrowUpIcon />}>Show less</Button> }\n            </FormControl> */}\n            <Box padding=\"20px\">\n              {allFixedCategories}\n            </Box>\n          </FormControl>\n          <Button onClick={handleRegister} variant=\"contained\" color=\"primary\">Register</Button>\n          <p>&nbsp;</p>\n        </div> :\n        <LinearProgress  />\n      }\n    </div>\n  )\n}\n\nexport default Register","export const toRad = (value) => value * Math.PI / 180\n\nexport const distance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Radius of the earth in km\n    const dLat = toRad(lat2-lat1);\n    const dLon = toRad(lon2-lon1);\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n            Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) * \n            Math.sin(dLon/2) * Math.sin(dLon/2); \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    return R * c; // Distance in km\n}","import React, { useState, useEffect } from 'react'\nimport { LinearProgress, Box, Typography, Card, CardContent, CardActions, Button, CardMedia, Grid, Chip, Dialog, DialogActions, DialogContent, FormControl, InputLabel, Select, MenuItem, FormControlLabel, Checkbox } from '@material-ui/core'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport StarIcon from '@material-ui/icons/Star'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport Cookies from 'js-cookie'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport LocationOffIcon from '@material-ui/icons/LocationOff'\nimport MapIcon from '@material-ui/icons/Map'\nimport axios from 'axios'\nimport env from './environment'\nimport { distance } from './util'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Rating } from '@material-ui/lab'\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n})(Rating)\n\nconst defaultCategories = [\n  { category: '5f9ab47d7fc4aaabd3eb50ba', label: 'Thai', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50f0', label: 'Fast Food' , value: 50, original_value: 50 },\n  { category: '5f9ab4807fc4aaabd3eb512c', label: 'Buffet', value: 50, original_value: 50 },\n  { category: '5f9ab47d7fc4aaabd3eb50c9', label: 'Japanese', value: 50, original_value: 50 },\n  { category: '5f9ab4817fc4aaabd3eb5137', label: 'Chinese', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50e5', label: 'Seafood', value: 50, original_value: 50 },\n  { category: '5f9ab4807fc4aaabd3eb5117', label: 'Noodle', value: 50, original_value: 50 },\n  { category: '5f9ab4827fc4aaabd3eb5153', label: 'Steakhouse', value: 50, original_value: 50 },\n  { category: '5f9ab47e7fc4aaabd3eb50ea', label: 'Korean', value: 50, original_value: 50 },\n  { category: '5f9ab47d7fc4aaabd3eb50bb', label: 'Italian', value: 50, original_value: 50 },\n  { category: '5f9ab4837fc4aaabd3eb5187', label: 'Shabu Shabu', value: 50, original_value: 50 },\n]\n\nconst ProgressWithLabel = (props) => (\n  <Box display=\"flex\" alignItems=\"center\">\n    <Box width=\"100%\" mr={1}>\n      <LinearProgress variant=\"determinate\" {...props} />\n    </Box>\n    <Box minWidth={35}>\n      <Typography variant=\"body2\" color=\"textSecondary\">{props.label}</Typography>\n    </Box>\n  </Box>\n)\n\nconst Recommender = (props) => {\n\n  const [loadingText, setLoadingText] = useState('Getting start.')\n  const [restaurants, setRestaurants] = useState(null)\n  const [location, setLocation] = useState(null)\n  const [token, setToken] = useState(null)\n  const [interaction, setInteraction] = useState([])\n  const [currentRestaurant, setCurrentRestaurant] = useState(0)\n  const [ratingValue, setRatingValue] = useState(0)\n  const [cardOpen, setCardOpen] = useState(false)\n  const [profileOpen, setProfileOpen] = useState(false)\n  const [isFinished, setIsFinished] = useState(false)\n\n  const [categories, setCategories] = useState([])\n  const [price, setPrice] = useState(-1)\n\n  // useEffect(() => {\n  //   setLoadingText('Getting current location')\n\n  //       axios.post(`${env.appServerUrl}/api/recommendations/init`, {\n  //         users: [props.user._id],\n  //         location: {\n  //           type: 'Point',\n  //           // coordinates: [position.coords.longitude, position.coords.latitude],\n  //           coordinates: [100.496216, 13.649434], // TEST KMUTT\n  //           // coordinates: [100.48707760767, 13.651196796184] // TEST ตำปากแตก\n  //         }\n  //       }).then((res) => {\n  //         console.log(res.data)\n  //         setToken(res.data._id)\n  //         axios.post(`${env.appServerUrl}/api/recommendations/request`, {\n  //           token: res.data._id,\n  //           histories: [],\n  //         }).then((res) => {\n  //           console.log(res.data)\n  //           setRestaurants(res.data.recommendations)\n  //           setLoadingText('')\n  //           setIsFinished(false)\n  //           setCardOpen(true)\n  //         }).catch((error) => {\n  //           alert(error)\n  //         })\n  //       })\n\n  // }, [props.user._id])\n\n  useEffect(() => {\n    setLoadingText('Getting current location')\n    if (!(\"geolocation\" in navigator)) {\n      alert('Geolocation is disabled')\n    } else {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setLocation([position.coords.longitude, position.coords.latitude])\n        console.log(position.coords)\n        setLoadingText('Getting recommendations')\n        axios.post(`${env.appServerUrl}/api/recommendations/init`, {\n          users: [props.user._id],\n          location: {\n            type: 'Point',\n            coordinates: [position.coords.longitude, position.coords.latitude],\n            // coordinates: [100.496216, 13.649434], // TEST KMUTT\n            // coordinates: [100.48707760767, 13.651196796184] // TEST ตำปากแตก\n          }\n        }).then((res) => {\n          console.log(res.data)\n          setToken(res.data._id)\n          axios.post(`${env.appServerUrl}/api/recommendations/request`, {\n            token: res.data._id,\n            histories: [],\n          }).then((res) => {\n            console.log(res.data)\n            setRestaurants(res.data.recommendations)\n            setLoadingText('')\n            setIsFinished(false)\n            setCardOpen(true)\n          }).catch((error) => {\n            alert(error)\n          })\n        }).catch((error) => {\n          alert(error)\n        })\n      })\n    }\n  }, [props.user._id])\n\n  const finishRecommendation = () => {\n    console.log('finish!')\n    console.log(interaction)\n    setIsFinished(true)\n    axios.post(`${env.appServerUrl}/api/recommendations/request`, {\n      token: token,\n      histories: interaction,\n    }).then((res) => {\n      console.log(res.data)\n      setRestaurants(res.data.recommendations)\n    })\n  }\n\n  const showNextRestaurant = () => {\n    const newCurrentRestaurant = currentRestaurant + 1\n    setCurrentRestaurant(newCurrentRestaurant)\n    setRatingValue(0)\n    if (newCurrentRestaurant >= restaurants.length) {\n      finishRecommendation()\n    } else {\n      setTimeout(() => {\n        setCardOpen(true)\n      }, 100)\n    }\n  }\n\n  const handleInteraction = (event, value) => {\n    const newInteraction = {\n      restaurant: restaurants[currentRestaurant]._id,\n      is_love: null,\n      rating: value - 3,\n      timestamp: Date.now(),\n    }\n    interaction.push(newInteraction)\n    setInteraction(interaction)\n    setRatingValue(value)\n    setTimeout(() => {\n      setCardOpen(false)\n      setTimeout(() => {\n        if (!restaurants[currentRestaurant].has_profile && value === 5) {\n          openProfileDialog()\n        } else if (currentRestaurant < restaurants.length - 1) {\n          showNextRestaurant()\n        } else {\n          finishRecommendation()\n        }\n      }, 100)\n    }, 100)\n  }\n\n  const handleMore = () => {\n    setRatingValue(0)\n    setCurrentRestaurant(0)\n    setIsFinished(false)\n    setCardOpen(true)\n  }\n\n  const handleLogout = () => {\n    Cookies.remove('username')\n    window.location.reload()\n  }\n\n  const openGoogleMap = (latitude, longitude) => {\n    const url = `https://www.google.com/maps/search/${latitude},${longitude}`\n    window.open(url, '_blank')\n  }\n\n  const getDistance = (restaurant) => location ? distance(restaurant.location.coordinates[1], restaurant.location.coordinates[0], location[1], location[0]) : 0\n\n  const progressDone = (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <CheckCircleIcon style={{ fontSize: 100 }} color=\"secondary\" />\n      <h3>Thank you.</h3>\n      <Button onClick={handleMore} variant=\"contained\" color=\"primary\">More</Button>\n    </Grid>\n  )\n\n  const openProfileDialog = () => {\n    setProfileOpen(true)\n  }\n\n  const handleCloseProfileDialog = () => {\n    setPrice(-1)\n    setCategories([])\n    setProfileOpen(false)\n    if (currentRestaurant >= restaurants.length - 1) {\n      finishRecommendation()\n    } else {\n      showNextRestaurant()\n    }\n  }\n\n  const handleSubmitProfileDialog = () => {\n    const updateData = {\n      has_profile: categories.length > 0,\n      profile: {\n        price_range: price,\n        categories: categories,\n      }\n    }\n    console.log(updateData)\n    axios.put(`${env.appServerUrl}/api/restaurants/${restaurants[currentRestaurant]._id}`, updateData).then((result) => {\n      console.log(result.data)\n      handleCloseProfileDialog()\n    }).catch((error) => {\n      console.log(error)\n      alert(error)\n      handleCloseProfileDialog()\n    })\n  }\n\n  const handleCategories = (checkedName) => {\n    const newNames = categories?.includes(checkedName)\n      ? categories?.filter(name => name !== checkedName)\n      : [...(categories ?? []), checkedName];\n    setCategories(newNames);\n    console.log(newNames)\n    return newNames;\n  }\n\n  const handlePrice = (event) => {\n    setPrice(event.target.value);\n  }\n\n  const profileDialog = (\n    <>\n    { !isFinished && \n      <Dialog open={profileOpen} aria-labelledby=\"form-dialog-title\">\n        <DialogContent>\n          <h2 style={{margin: '0'}}>{ restaurants && restaurants[currentRestaurant].name }</h2>\n          <p style={{margin: '10px 0 40px', color: 'gray', fontSize: '0.7rem'}}>This restaurant has no profile. If you have ever go to this restaurnat, could you please give us some information about this restaurant. You can skip this by tapping SKIP</p>\n          { restaurants && (restaurants[currentRestaurant].profile.price_range === -1 || restaurants[currentRestaurant].profile.price_range === null || !('price_range' in restaurants[currentRestaurant].profile)) && \n            <FormControl fullWidth variant=\"outlined\">\n              <InputLabel id=\"price-select-filled-label\">Price</InputLabel>\n              <Select labelId=\"price-select-filled-label\" variant=\"outlined\" value={price} onChange={handlePrice} label=\"Price\">\n                <MenuItem value=\"none\"><em>Price...</em></MenuItem>\n                <MenuItem value={1}>฿</MenuItem>\n                <MenuItem value={2}>฿฿</MenuItem>\n                <MenuItem value={3}>฿฿฿</MenuItem>\n                <MenuItem value={4}>฿฿฿฿</MenuItem>\n                <MenuItem value={-1}>No Data</MenuItem>\n              </Select>\n            </FormControl>\n          }\n          <p><strong>Restaurant Types</strong></p>\n          <FormControl>\n            { defaultCategories.map(({ category, label }) => \n              <FormControlLabel fullWidth control={<Checkbox checked={categories.includes(category)} onChange={() => handleCategories(category)} name={category} />} key={category} label={label} />\n            )}\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseProfileDialog} color=\"secondary\">\n            SKIP\n          </Button>\n          <Button onClick={handleSubmitProfileDialog} variant=\"contained\" color=\"primary\">\n            SUBMIT\n          </Button>\n        </DialogActions>\n        </Dialog>\n      \n    }\n    </>\n  )\n\n  const recommender = (\n    <div>\n      { restaurants && currentRestaurant < restaurants.length && (\n        <div>\n          <ProgressWithLabel variant=\"determinate\" value={((currentRestaurant + 1) / restaurants.length) * 100} label={`${currentRestaurant + 1}/${restaurants.length}`} />\n          <p></p>\n          <Dialog fullWidth open={cardOpen} TransitionComponent={Transition} keepMounted >\n            <Card>\n              {restaurants[currentRestaurant].cover_url && <CardMedia component=\"img\" image={restaurants[currentRestaurant].cover_url} title=\"Contemplative Reptile\" height=\"160\" />}\n              <CardContent>\n                <h2 style={{ marginBottom: '0px', marginTop: '5px' }}>{restaurants[currentRestaurant].name ?? ''}</h2>\n                <p style={{ fontSize: '10px', color: 'gray', marginBottom: '0px' }}>{restaurants[currentRestaurant].address}</p>\n                <Button style={{ marginBottom: '20px' }}startIcon={<MapIcon />} color=\"secondary\" onClick={() => { openGoogleMap(restaurants[currentRestaurant].location.coordinates[1], restaurants[currentRestaurant].location.coordinates[0]) }}>\n                  Map\n                </Button>\n                <div>\n                  {restaurants[currentRestaurant].profile.categories.map(({ _id, name_en }) => <Chip key={_id} style={{ marginBottom: '5px', marginRight: '10px' }} label={name_en} />)}\n                </div>\n                <div>\n                  <p>\n                    <strong>\n                      {`${(getDistance(restaurants[currentRestaurant])).toFixed(2)} km` ?? ''}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      </strong>\n                    {restaurants[currentRestaurant].profile.price_range !== -1 && (\n                      <span>\n                        {'฿'.repeat(restaurants[currentRestaurant].profile.price_range)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      </span>\n                    )}\n                    {restaurants[currentRestaurant].profile.rating && (\n                      <span>\n                        <StarIcon style={{ fontSize: 14 }} /> {restaurants[currentRestaurant].profile.rating}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      </span>\n                    )}\n                    {restaurants[currentRestaurant].profile.likes && (\n                      <span>\n                        <ThumbUpAltIcon style={{ fontSize: 14 }} /> {restaurants[currentRestaurant].profile.likes}\n                      </span>\n                    )}\n                  </p>\n                </div>\n              </CardContent>\n              <CardActions style={{paddingTop: '0'}}>\n                <Box component=\"fieldset\" style={{width: '100%', textAlign: 'center'}} width=\"100%\" borderColor=\"transparent\">\n                  <Box display=\"flex\" padding=\"0px 20px\" color=\"gray\" fontSize=\"0.8rem\" justifyContent=\"space-between\">\n                    <Box>Not Interested</Box>\n                    <Box>Interested</Box>\n                  </Box>\n                  <StyledRating onChange={handleInteraction} value={ratingValue} style={{fontSize: '2.5rem'}} name=\"customized-color\" defaultValue={0} getLabelText={(value) => `${value} Heart${value !== 1 ? 's' : ''}`} precision={1} icon={<FavoriteIcon fontSize=\"inherit\" />}/>\n                </Box>\n              </CardActions>\n            </Card>\n          </Dialog>\n        </div>\n      )\n      }\n      { restaurants && isFinished &&\n        <div>\n          {progressDone}\n        </div>\n      }\n    </div>\n  )\n\n  return (\n    <div>\n      {/* {restaurants} */}\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <h3>Hi, {props.user.username ?? ''}</h3>\n        <Button onClick={handleLogout} size=\"small\" color=\"secondary\">Logout</Button>\n      </Grid>\n      { location ?\n        <div style={{ color: 'gray' }}>\n          <LocationOnIcon style={{ fontSize: '14px' }} /> {location[1].toFixed(6)}, {location[0].toFixed(6)}\n        </div> :\n        <LocationOffIcon style={{ fontSize: '14px' }} />\n      }\n\n      <p></p>\n      { loadingText ?\n        <div>\n          <p>{loadingText}</p>\n          <LinearProgress />\n        </div> :\n        <div>\n          {recommender}\n          {profileDialog}\n        </div>\n      }\n      <p></p>\n    </div>\n  )\n}\n\nexport default Recommender","import React, { useState, useEffect } from 'react';\nimport { Container, Button, TextField, FormControl, LinearProgress } from '@material-ui/core'\nimport Register from './Register'\nimport Recommender from './Recommender'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport Cookies from 'js-cookie'\nimport axios from 'axios'\nimport env from './environment'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ffa040',\n      main: '#ff6f00',\n      dark: '#c43e00',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#63a4ff',\n      main: '#1976d2',\n      dark: '#004ba0',\n      contrastText: '#fff',\n    },\n  },\n})\n\nexport const App = () => {\n\n  const [isDone, setIsDone] = useState(false)\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [isRegister, setIsRegister] = useState(false)\n\n  useEffect(() => {\n    const cookieUsername = Cookies.get('username')\n    if (cookieUsername) {\n      login(cookieUsername)\n    } else {\n      setIsDone(true)\n    }\n  }, [])\n\n  const login = (inputUsername) => {\n    axios.post(`${env.appServerUrl}/api/auth`, {\n      username: inputUsername\n    }).then(res => {\n      const data = res.data\n      if (!data.status) {\n        alert(data.error)\n        setIsDone(true)\n      } else {\n        Cookies.set('username', data.data.username)\n        setUser(data.data)\n        setIsDone(true)\n      }\n    }).catch((err) => {\n      alert(err)\n    })\n  }\n\n  const handleLogin = () => {\n    setIsDone(false)\n    console.log(env)\n    login(username)\n  }\n\n  const handleUsername = (event) => {\n    setUsername(event.target.value)\n  }\n\n  const loginForm = (\n    <div>\n      <h3>Please login</h3>\n      <FormControl fullWidth>\n        <TextField onChange={handleUsername} variant=\"outlined\" label=\"Username\" />\n      </FormControl>\n      <Button onClick={handleLogin} style={{marginTop: '10px'}} variant=\"contained\" color=\"primary\">Login</Button>\n\n      <h4>or</h4>\n      <Button onClick={() => setIsRegister(true)} variant=\"contained\" color=\"primary\">Register</Button>\n    </div>\n  )\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <h1>Resteraunt Recommender</h1>\n          { isDone ?\n            <div>\n              { (!isRegister && !user) && loginForm }\n              { isRegister && (\n                <div>\n                  <Button onClick={() => setIsRegister(false)} color=\"primary\">Login</Button>\n                  <Register />\n                </div>\n              )}\n              { user && <Recommender user={user} name={user.username} /> }\n            </div> :\n            <LinearProgress  />\n          }\n        </Container>\n      </ThemeProvider>\n    </div>\n  )\n}\n//npx browserslist --update-db\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}